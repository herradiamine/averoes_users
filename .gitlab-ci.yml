stages:
  - code_sniffer
  - sonar_scanner
  - codeception_unit

Code sniffer:
  stage: code_sniffer
  # Select image from https://hub.docker.com/_/php/
  image: php:7.4.6
  before_script:
    # Install git and unzip (composer will need them)
    - apt-get update && apt-get install -qqy git unzip
    # Install composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    # Install all project dependencies
    - composer install
  script: vendor/bin/phpcs --standard=PSR1,PSR2,PSR12 ../averroes_users --ignore=*/vendor/*,*/Tests/_output/*

Sonar scanner:
  stage: sonar_scanner
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner

Codeception unit:
  stage: codeception_unit
  # Select image from https://hub.docker.com/_/php/
  image: php:7.4.6
  before_script:
    # Install git and unzip (composer will need them)
    - apt-get update && apt-get install -qqy git unzip
    # Install composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    # Install all project dependencies
    - composer install
  script: vendor/bin/codecept run unit
